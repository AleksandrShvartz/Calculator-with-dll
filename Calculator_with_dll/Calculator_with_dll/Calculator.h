#pragma once
#include "windows.h"
#include <filesystem>
#include<iostream>
#include <string>
#include "InfoFunc.h"
#include "Parser.h"
namespace fs = std::filesystem;
/// <summary>
/// Главный класс калькулятора,позволяет догружать библиотечные функции из сторонних .dll
/// файлов. Для этого в каждом подгружаемом файле должно быть 3 функции, если функция - бинарный оператор:
/// 1) double calculate(double a,double b) 
/// Должна взвращать искомое значение по передаваемым аргументам. 
/// 2)std::string name().
///  Должна возвращать формат записи функции при использовании функции.
/// Например: "*" для умножения
/// 3)int priority Должна возвращать приоритет оператора - число от 1 до 10,
/// Сложение по умолчанию имеет приоритет 2.   
/// Название файла должно заканчиваться символом '2' если оператор представленный в файле - бинарный
/// Если функция - унарный оператор, то в файле должны быть	представлены 2 функции:
/// 1) double calculate(double a)
/// Должна взвращать искомое значение по передаваемому аргументу. 
/// 2)std::string name().
///  Должна возвращать формат записи функции при использовании функции.
/// Например: "sin" для функции синуса
/// </summary>
class Calculator {
	/// <summary>
	/// Хранит в себе указатели на загруженные функции
	/// </summary>
	InfoFunc info;
	/// <summary>
	/// Хранит в себе информацию о загруженных библиотеках.
	/// </summary>
	std::vector <HINSTANCE>handles;
	void loadLibs(std::vector<fs::path>);
public:
	 /// <summary>
	 /// Конструктор класса ищущий и загружающий библиотечные функции. 
	 /// </summary>
	 Calculator();
	~Calculator();
	/// <summary>
	/// Основная функция возвращающая результат вычисления выражения.
	/// </summary>
	/// <param name="equation">Выражение коротое надо вычислить</param>
	/// <returns>Результат вычисления</returns>
	double calculate(std::string equation);
};